on:
  workflow_call:
    inputs:
      checks_enabled:
        type: string
        default: '["tf_fmt", "trivy_config_scan", "tflint", "terraform_docs"]'
      working_directory:
        type: string
        default: "./"
        description: Working directory for the checks to run in
      tf_fmt_args:
        type: string
        default: -recursive -check -diff
        description: Arguments to pass to "terraform fmt"
      trivy_skip_dirs:
        type: string
        default: ""
        description: Comma separated list of directories where traversal is skipped
      tflint_config:
        type: string
        default: ${GITHUB_WORKSPACE}/.tflint.hcl
        description: TFLint config file path
      tflint_args:
        type: string
        default: --recursive --color
        description: Arguments to pass to "tflint"

jobs:
  tf_fmt:
    name: run terraform fmt
    runs-on: ubuntu-latest
    if: ${{ contains(fromJson(inputs.checks_enabled), 'tf_fmt') }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Run terraform fmt
        run: terraform fmt ${{ inputs.tf_fmt_args }} ${{ inputs.working_directory }}

  trivy_config_scan:
    name: run trivy config scan
    runs-on: ubuntu-latest
    if: ${{ contains(fromJson(inputs.checks_enabled), 'trivy_config_scan') }}
    steps:
      - uses: actions/checkout@v4
      - name: Run trivy config scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          github-pat: ${{ secrets.GITHUB_TOKEN }}
          scan-type: config
          scan-ref: ${{ inputs.working_directory }}
          skip-dirs: ${{ inputs.trivy_skip_dirs }}
          exit-code: '1'
          format: table

  tflint:
    name: run tflint
    runs-on: ubuntu-latest
    if: ${{ contains(fromJson(inputs.checks_enabled), 'tflint') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        with:
          tflint_version: latest
      - name: Init TFLint
        run: tflint --init -c ${{ inputs.tflint_config }}
      - name: Run TFLint
        run: tflint -c ${{ inputs.tflint_config }} ${{ inputs.tflint_args }}

  terraform_docs:
    name: run terraform-docs
    runs-on: ubuntu-latest
    if: ${{ contains(fromJson(inputs.checks_enabled), 'terraform_docs') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate terraform docs are present and valid
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          find-dir: ${{ inputs.working_directory }}
          fail-on-diff: true
      - name: List README.md diff files
        if: ${{ failure() }}
        run: |
          git status
          echo "## run terraform-docs failure" >> $GITHUB_STEP_SUMMARY
          echo "### Newly generated or changed README.md files" >> $GITHUB_STEP_SUMMARY
          echo "There should be no new files generated by terraform-docs" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          git status >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
